apiVersion: v1
kind: Namespace
metadata:
  name: chin
---
apiVersion: v1
data:
  ca-key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBMzBmZkJYRVhaL1M0QmpyWHpPT2tFSnM1b3p6bFdCWEw5L1V5dE5BbmFFaGwxeXB1Cmd5NE1GNWR5c1lhTEEvMmpLTzV3TTFvMlEyK3ZLcHYzb3lXTW1URWpvWEdvWWU1VEp3R1owdlpkRzBXTFhkTGIKcTJ0TmlOVDJlaTJqK0tHQmhOZTRlVHI5NFpPUVVQTUVCZkJodTdlcXdXd2hPMWpRREV6U203U3NBck9vQytMTgpUUWpWU25ZYVJjT1piRlFOaW5hWWswZG5Rd3g0V3pJcjZJYXNhQkJCc0U5VmNTZnZGSi9XRFRBN3k2eVY5eFVSCndzdzgxNTR6STBBY0hKckx5YWxmWUhyeU55SVZqVUlYT05vZXVDMVpPZ1FwMWRHbXhPaWtKcExtQzhKUUd0REoKcFNwS25sYUtVU0xPd2s2Z1M4b3huZUdUcUF6cjhoZTQ1QjM2OWJRMk5aMCtzaVE0eEZPZjlLV3NoOVJTWjNGUgpQK2JzL0FkaUNkcHFDbCtVNHNCQWNYY2YwVUVXZHhueDEySXd3Q0tYWVcyaWtoTzg1NDg1dlR1Tm1ncGYyOGk5Cmo3eW5vMHhGS2NGSDlpMi9XMzI4SDNiZjRGenZYbnBKbVF0YW93WjBEUlczWGdiTzBLWGVpRExiMmhiY2hwK0MKaUtzdXgxN0hrS3A1OG5sYjRUc3EzVC9LR1lETDJHUG5LSDU4a3gzdyswdVdEWHJVZGhKdTRoVUQ1VzZtRUY5Mgpkb1BwT254aHJyRENnZG1Jemk4VWRkUVRldGUzMDZDOGNCaUZJc0NvV1BGeHBwRlVoTElya3Yza2RvcFluekFYClpTWGJSVjVJNFRLQjBYMXFnS3hQd0l4YklIK2pZeWlSSEsyMTZGRnZjUlFmZHRyaWRqZDJnbkZDN1lzQ0F3RUEKQVFLQ0FnRUF4eFBzekl4T0F6bFZ6dkF1TXhlUTArR2kzV0hSVnQxd1ZEQUNPdWNSQzlEcFJKUW5ucnl5dVdJbQpPQlN1NUNzRWk5MDBtd1RITnc5Z1RneHNHc0hDLzErcDFpdGhwNWQzK21KYUJaZjE0ZmY2ei9mT05xUGdxS3pBCjZxVEErMUQ5Q3pYUDIvOTJGK2ViR0NIbEoycHhxWTZVS0F0Q0Fna296cDY4ZFduOHFCZ0pNRGZUTnVrMlMwTE0KSUFITFRLUVF3ckVGVHVPdU5VRHNHdHU3L0lIL1BIV3FMQXBBTXprWTJQbStQMW9QSm9WRjNOeWpUbDBOcm0zMgpTR3JENWRrNjlCNFkxUXdwNUhCMmFORlJwVFlOaDhlZk03UThuTkZsOFZFLzhzaXRaalNsZVpOSkJ3T1RMbVFZCnhValVzcmlxQVlsUS9lVC80eWxLUWp0V2RjWXBWN2o0OTZHNWxkaENoR2hiYU9paWNqMk9EWkpnUGoxbVN3bmQKS2hMUTRBNWc4VHVmaENIRG5jclBNc2tnUGphV08zVHQ1THcyMFEzVWhjdndIOXBTSUc5NXpTUzJ4dlc1akVwcwptRXl1RERiNXZodFlVSTFJNDBkUjJVVVhJbU9ZK1NtbEw0eWVJZTJpamJkN2hXRTFaR0pQSFNxUEJSWmFiR3pDCjh4b2NvbmozZllyOWtHOFVFbjRpT1BPd2xxYjNlelB6TFgwMy9NV0V0anFRR3NrZUpiZDBWV2JmUTlKN3ByejEKYTNmOU1GSXN4L3VFVkJtY0g4MFYxVEN3V3FXL0U3VW0wbHhUa3NjRWpocXVEeFh4V3prZXRMck1jdllwSW1MRwpKVk1PUXVQY0NDNW9uSUNrSTNRR2JWaXF6ZmRUOHJMKzJVNTArRlp3T3Ftc20yajNkUWtDZ2dFQkFPZEsrR0daCkZtQ00xSkFzSWphaHh2SkpVd3B2aVFUR1J0YUVyYmEvbTMyemZyN1JvSUxNREVQZWczVmFiM0F0MUVIWEZSWDEKRnBEMFJDZVgwQzc2azNGbE1mRFZxN1hIcnlHSnA5ZEQ4QmRkR052MW85N1RrWm5qcHdQdjUzWkJWeVl6UGpacQpydktHeEFHWGFuQ0s5WFliVHFpYUk4RFVsdExKY0xVVTdwRHBPSVFVcEZSMFQyRzhZbENyMGhCY2tsRFRDUjQzCjkwZ0ZSU3o2UXc3RlZjMG0vVFBLaHdVUkR5Q3hhYko5RE1remdBREZWL0pXVnRyUGYzeG1xN1FuZVRRYUxRV2EKV0xNR29JcjdTaW9HKzF4M3hIWjVUakt6ejlxSDZyR014Ty9wOEJhWXhIVSs4WDJpRGVZaEt4SEtPaEdRc2RrSwpZK2pjaEY2eGU0ZHJmODBDZ2dFQkFQY2h6SEJiODMzc1U2eTVZanZrS2xjT3I5cWsyWUk1bU51U3BBbVRuTlIvCkNGZVB6bytrWjhNYm5kd2ZIekI4OWZNSUtzR3hjamhhOXIxa2cwaUs3MXB3S0RhclI2TXROYlFtYkxuYVdOTDcKSTA2Smgza0tqR0tsN3NQWWV1OFZzUnBIZEE2K1pJRmhxeDViRUY0RU14Y1NrK0t2RXRqb3NiYXVLbzVmMzZvKwowZDUycW12d2pzTFcrL21DRUhxMDk5T3V2QTVSRWc5OXhRWWxVREN1REJxSExqYlJqWWtXOW1hN2lraGYzN1lECkpveGNZQ1ZmZ0hla0VOWmdKenFhS0tKMFB4Wjl2dHpkcGJNZGl4Q3k4S29xYWRwYUs3UnBoT0FKL0lYQWY0WnAKK0tvVEdQS0hrNmRmeStDRDFNV3RXTEVHMnNGOUN0NklubkhISTJqdTJyY0NnZ0VBSnN2amgvTjIxbkVwQXBuMApqemRwdUtCbUJuMFkvYTBJbXRrY2ptZnJmQlZNc0ZOWFdqbEI0V3lFbm4yeDdaNHlXV3pyZzRoZDVhaWplZ1MwCkRmMUlHQ0JDVlVSeURnYlZzSWwzbHRzMWZhWEhFclpNYTRjUGlFR3dkUytib3JGcEhlWkFqRDR1NUUySXVUK2QKd2d6OUNYZWhKUlRkNUcyRWN3MEpFOGJVRVlpZFMwSnZJaDkwWlUrRktrVDM4bmlrcmx3SHpvTFN2c2pyaHBUZwpCSzFETEN0YkU0SG9UZ2hEZ2xkZ0JHbUhhSVJ6OXkwakNHcEZIV1RxM0lJWVVSckI4T1JuSXVaMTlHbXJLa1RtCmR0QSsvNDZ6YkxBQ1Z1emtjNktTMG45clZWYm5SOU1PT1NCNnYza2NYYnE0ajc1ZEtTOGROZXZSUUhFazN3RmsKV0IzSERRS0NBUUFRMFhBRVJYMndtQ0NwcElRVzUxUXFVSW1QSzZEUngvR3JIN09pSXpXTkVJZ1V6V2lWUmU3NQp6Q3RXQzVnbnlKbEVUTTM4R0lOWmFuZFlORHJxK09tSkVoRHFoNFY4aVZzYVEzTXF3cjFBdm02TXJiZFdlVzFNCldWYUNaWDBZUURXcFFDdVp4VU01dXRmV1hRUWtJYzBJU085ZmdlS2FlRnQvdnlLT1JlQUd5ZmVtV0JVSSszbjcKc0gyOVlTaVY4VExjYVF2TFBhRXBCTG9melBKRUhkUWRDZzRQRlB1NDFLTTRJcE1xa2J1N3UwTW9VakVJMmhMNApFV1pEOEk4NjRicmFNMmNIdE04RVlPRWg2MlRIWWlZV3JvUTlvOTFOamRESkhtVGRCVmlvWVJYWEhTMlpjN2lNCnIyeEVmelEvcjZoVmc4M25WUWNrVmMvU2xtYkdnVnJKQW9JQkFRRFNsWHlRaGlnZ3ZDVGhycHVyVEFOdUZrK0gKRXpXYzFMQW5sb0ZCWjVpWWR5cHcybUxJV0hHWGxtZUhNN08wZDdndjBhd25WUU1kMVVXZUVWekVGeGdTODY0eQo1Ukd1R3FhUEdJN01NRUtUYjI0RTYwdnk2VC85MTdubHU0NENScW5hblFDeHU2UEE0dWRMalZQNk5Bb3JNVElnCmpKc25iSWcrYk5DOTdSSklTTVNCcHV0c1VyaGVCR2F6eWFhNStDU2xzUlZaKzYzSnNPUG9GY3dIbk9YcVQ4VUQKOUlOY0dnTXRRNzFkVGRzYXZRTlpVcnRUcUcrRkFFTjk2dk56UzFIWDBmaStkVlNNbk9Ka0pDbVJQOG5zenBZTwpZYzJrQm1vMFVBUC8wQkRQQjVxRm1VdWJybUxRQlF6TUhyUVYrVkRtNGJuUmVLTldvQlNPVzVnZmlpMDcKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
  ca.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZrRENDQTNpZ0F3SUJBZ0lVQzROQWxCeFZWL1ArN20yd3llWnlxbXQ0R01jd0RRWUpLb1pJaHZjTkFRRU4KQlFBd1lERUxNQWtHQTFVRUJoTUNRMHd4Q3pBSkJnTlZCQWdUQWxKTk1SRXdEd1lEVlFRSEV3aFRZVzUwYVdGbgpiekVUTUJFR0ExVUVDaE1LVjJGc2JXRnlkQ0JEVERFY01Cb0dBMVVFQ3hNVFVISnZaSFZqZEc5eklFUnBaMmwwCllXeGxjekFlRncweE9UQXhNVFF4TWpBME1EQmFGdzB5TkRBeE1UTXhNakEwTURCYU1HQXhDekFKQmdOVkJBWVQKQWtOTU1Rc3dDUVlEVlFRSUV3SlNUVEVSTUE4R0ExVUVCeE1JVTJGdWRHbGhaMjh4RXpBUkJnTlZCQW9UQ2xkaApiRzFoY25RZ1Ewd3hIREFhQmdOVkJBc1RFMUJ5YjJSMVkzUnZjeUJFYVdkcGRHRnNaWE13Z2dJaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURmUjk4RmNSZG45TGdHT3RmTTQ2UVFtem1qUE9WWUZjdjMKOVRLMDBDZG9TR1hYS202RExnd1hsM0t4aG9zRC9hTW83bkF6V2paRGI2OHFtL2VqSll5Wk1TT2hjYWhoN2xNbgpBWm5TOWwwYlJZdGQwdHVyYTAySTFQWjZMYVA0b1lHRTE3aDVPdjNoazVCUTh3UUY4R0c3dDZyQmJDRTdXTkFNClROS2J0S3dDczZnTDRzMU5DTlZLZGhwRnc1bHNWQTJLZHBpVFIyZERESGhiTWl2b2hxeG9FRUd3VDFWeEorOFUKbjlZTk1EdkxySlgzRlJIQ3pEelhuak1qUUJ3Y21zdkpxVjlnZXZJM0loV05RaGM0Mmg2NExWazZCQ25WMGFiRQo2S1Fta3VZTHdsQWEwTW1sS2txZVZvcFJJczdDVHFCTHlqR2Q0Wk9vRE92eUY3amtIZnIxdERZMW5UNnlKRGpFClU1LzBwYXlIMUZKbmNWRS81dXo4QjJJSjJtb0tYNVRpd0VCeGR4L1JRUlozR2ZIWFlqREFJcGRoYmFLU0U3em4KanptOU80MmFDbC9ieUwyUHZLZWpURVVwd1VmMkxiOWJmYndmZHQvZ1hPOWVla21aQzFxakJuUU5GYmRlQnM3UQpwZDZJTXR2YUZ0eUduNEtJcXk3SFhzZVFxbm55ZVZ2aE95cmRQOG9aZ012WVkrY29mbnlUSGZEN1M1WU5ldFIyCkVtN2lGUVBsYnFZUVgzWjJnK2s2ZkdHdXNNS0IyWWpPTHhSMTFCTjYxN2ZUb0x4d0dJVWl3S2hZOFhHbWtWU0UKc2l1Uy9lUjJpbGlmTUJkbEpkdEZYa2poTW9IUmZXcUFyRS9BakZzZ2Y2TmpLSkVjcmJYb1VXOXhGQjkyMnVKMgpOM2FDY1VMdGl3SURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQVFZd0R3WURWUjBUQVFIL0JBVXdBd0VCCi96QWRCZ05WSFE0RUZnUVVzQU5CMnMvQmpsbTV5NUgyM2Q3WjRHQUFxZlF3RFFZSktvWklodmNOQVFFTkJRQUQKZ2dJQkFKSkZZYi9Qczg3TVNiTGxIa1BtZ25KeUVTK2FVZ1JmR0JOclpqTGluRWhRQjV4SDZPQ3lWVGVPcWpCQQoxai9DRVBaWUU0ZFRaTjZta0gyYTNucklXTlBUa0V5ZW5PVjYvTzYwelNWVFh5QjR6ZjByQzR2RFNYcVBhSHdkCk9zUUtkOFZyVVhTM2N2aHppeHdwMEtIZW9tcExxYU5BUWYyUmRkVlRLVE9lcG8vS1hXNHZ4VzlzeHJqK1RRVGUKZWszV2pTK2lSbVdBK1NNbEdvdmxIa3MwUmtrditOT3pocExjcXBoVUIvVGFSdmg2Wi9HNXY0YzBGOS9Bck5icgpVZ1J1MmQ3WWtsOHVWL3lWMnpZTkpWQUpiL3lYZmNxTWN0MnkxenV1OWs5emdIeHY0RHBtdUhUTDVEL1ZWcEhPCkw5RWI1ZWxYQnNoQ296ZCtZYlRWZzFha3BkVWkyQTV3OHNNNUdQWnVzcldxL3Nmc01La3crNWNmVmRCRDZRZ3QKN3hBREZKVjd1WVNVaXRvRFZGSFpQNkJGL3FGQmcvSkErVjZuRy9pbDFCSHBQeFREdjZZKzk3bXJyaWtFbElSWQphQXNPbENCWnl1dnRsbVpKQlJJNnVxZXdNYVZBNWNuWTl0a01EWnE2am5KM01OU0pOUVdQdDhTblJseHFhL3V4Ckd6UzliOTFycjljM21XbExkalBkLzkyMUVxOGdtNEcxNkhKY1EvSFNMTEJiTFcyL3hWSCtmenpBa0s3RmEwY3oKRFk2ZDNvSm9BRHQ3TTdyaENuY0wwZG14dVQ2YVVTNVZCQmN6R3dUS3laMVcraGF6UnAvUCsrcG9zVURtVVUvbgpaVEVmQUZvOWhXMUswa1NYNTNkMXRSWWlFNDFjbE9aWU8zTHNCU1V0NVdzZS9YVVUKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  cert.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUdaVENDQkUyZ0F3SUJBZ0lVUHlYVVJ3dk0wNTZiMjVRajlNVHdpZGtsYm80d0RRWUpLb1pJaHZjTkFRRU4KQlFBd1lERUxNQWtHQTFVRUJoTUNRMHd4Q3pBSkJnTlZCQWdUQWxKTk1SRXdEd1lEVlFRSEV3aFRZVzUwYVdGbgpiekVUTUJFR0ExVUVDaE1LVjJGc2JXRnlkQ0JEVERFY01Cb0dBMVVFQ3hNVFVISnZaSFZqZEc5eklFUnBaMmwwCllXeGxjekFlRncweE9UQXhNVFF4TnpVM01EQmFGdzB5TURBeE1UUXhOelUzTURCYU1IZ3hDekFKQmdOVkJBWVQKQWtOTU1Rc3dDUVlEVlFRSUV3SlNUVEVSTUE4R0ExVUVCeE1JVTJGdWRHbGhaMjh4RXpBUkJnTlZCQW9UQ2xkaApiRzFoY25RZ1Ewd3hIREFhQmdOVkJBc1RFMUJ5YjJSMVkzUnZjeUJFYVdkcGRHRnNaWE14RmpBVUJnTlZCQU1NCkRTb3VaWGhoYlhCc1pTNWpiMjB3Z2dJaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQ0R3QXdnZ0lLQW9JQ0FRQ2gKWUQ5SEFTWVNQZTJOaXRoTXVQZURrbkNaeXZ2VjRHTERoRjIveXFDZ0hZUEw5UW5CMTdnRnZycVVYRVMwM1NsRQozd0d1eXlrb29rOG5kdVBnejdVRHNoVGdaamthYkNDMWo0Y0pUSDNSV043UHF6VE5PTzl1Q2poZm4wUDlENnJnCi9ITldPdHVnVE5rYUpZNDFZRlB3bldyK3VDYkVhQ2RFVmMrNUgrdTRNTE5WemJzc0xzcEd6QmdlT2NISnNlc0kKcStoNnJ6S1RaNENpdlFvSUs0enJJS0FiVjM1ZEpaclp2QTM0cE1adWxya3ZmYkZueGZVNmVjZW1UWTFVUWxoTwpPZFZYTnR1RTVFZVlrdzB2eXZ3WGhoZXF3SENmQzZJYUQzTXc4Y0F3TWRZNHdvdzZFVWl4WEdtV3p1MXl2Uk52CkJYWUgydnhoc293V1ZPQ0N4NkJGOG9SZ2c0c0V2eEdvbEdYelBpSTBqeXdubjMwYS9VRnZZeDljVmtRVWdiT1UKNzlzR2hzZ0dqZTRmRFBxL3JRL1lvbVFpL0I4c1NhYVpuVUVaNzg1bjZvUzZicEJFQnFIRXRaczJ6UzByejhxbwpIZldjM2JUeHNGOFovRTFEdXJ4ekNUSlRtbUR4R3ovUmNUVys1OC9BRzJBQTFJUVJvRDdEMkxGNll0QnBmc2t0CnJ5NDRUMXBrZ0lweGN2NXplUkppREJ2UHRRTGQ5MkFocWNpdUo5dEtpRGlyS0JvN2NVVzdlRTBHNlpnQnIzV2cKVG5aelMzVExTTHZmLzNXNjNMM0NiZVFnZDRGeGFMWjF3cW1ZU1BpSnZ2OHQ5cW5JbzNSdXliRmxWekdrMUlGYwozMEtWclpnVG1GaGE3UjVaS0xBekpPcEdINkl1eHBiek1HZ2dCTFBQY1FJREFRQUJvNEgrTUlIN01BNEdBMVVkCkR3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3REFZRFZSMFQKQVFIL0JBSXdBREFkQmdOVkhRNEVGZ1FVbWUxbVVDY25tM3JPTlZrb0RpdU5iWW5lcXFRd0h3WURWUjBqQkJndwpGb0FVc0FOQjJzL0JqbG01eTVIMjNkN1o0R0FBcWZRd2ZBWURWUjBSQkhVd2M0SVJiRzlqWVd3dVpYaGhiWEJzClpTNWpiMjJDSEdaeWIyNTBaVzVrTFd4aFluTXRjbTVsWVhoakxYZHZjbXRsY2pHQ0hHWnliMjUwWlc1a0xXeGgKWW5NdGNtNWxZWGhqTFhkdmNtdGxjaktDSEdaeWIyNTBaVzVrTFd4aFluTXRjbTVsWVhoakxYZHZjbXRsY2pPSApCSDhBQUFFd0RRWUpLb1pJaHZjTkFRRU5CUUFEZ2dJQkFIR002bGRLWnk0aUZWUStYSUVwVWhKT0s3ZlQ0REhkCk8veW84ZXlWdEhtalRLMnpuaE1LeHZydng5dEVQdjFUNGZlblNxSFRmU1l4V0dTRU54aTNvOWM3c041VzVJOEcKK1VuVGZtQ0NzNHhybVhjK3YzTmFQaEZ3bGk1MHo4QnNYS05ZdUNzOEdYRUlCMTVRcE84UktvRXZGa0FLYUVPSQppY3ljQTR4aGNsYmhPK0xtTHJRMUt6UHUvSHJTcm41c3gwaGtnc1Fqb2dueWhQOTBIUWEyanU2Z3FaY3NpMkhFClFsdC9lODBhZDVWRm1URkV2azJKaWpYejh4eE40dENWMnlvL25zVkd5U1Vwejh6R1h1Z2labHNZSVpNdUtQaHEKbmJRcDVCeS9NVThxUHpvZ0dkVUtpWUxVdWo3RTVtcXAxRFpHUWdNME1pZ1dmYnNSOHZScUhYRU5ZSzFqMXN1UwpXR2Jpb3F3TTlIUnVMaDhYOXoyQ2lRc1JDUVVzREtxUzdQbG54SXZBUUxEcHlDb0VCc3ZPSEZncktremhaNENRClRvNnkxeVIrMjBLMTFXcloyeDBSQis1QUw2TTYzcS85VkZCY2FCN1VYT1JLNlFpa1JMVWplRElIUGxxM3lLc2YKNmNhNGRYZmMyZmM4Tk0zUTZ0VGJpbkZtSlVBemsxbVJQeDMzKzUrMWNZOS84NnVMWXAyQ1NCUktWTFQzaWh6cApkTFJ2MlhUYWsybU1wMmRKWEtBQk5ySG9xVHlVcUpzVHFoSXFhQk9vNEdLV2d3L2JycUU4S2VYbjJoNElUR09xClhIL1h6M0hSaU0yVzhFMXorZ0NZTWZJSGVXUXZ0RzZmNFZQRGcvN3d0a1FFMkdZZnpZSC90WnpRYnFjV25HTi8KdkluTXZzeVgyOVprCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key.pem: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBb1dBL1J3RW1FajN0allyWVRMajNnNUp3bWNyNzFlQml3NFJkdjhxZ29CMkR5L1VKCndkZTRCYjY2bEZ4RXROMHBSTjhCcnNzcEtLSlBKM2JqNE0rMUE3SVU0R1k1R213Z3RZK0hDVXg5MFZqZXo2czAKelRqdmJnbzRYNTlEL1ErcTRQeHpWanJib0V6WkdpV09OV0JUOEoxcS9yZ214R2duUkZYUHVSL3J1REN6VmMyNwpMQzdLUnN3WUhqbkJ5YkhyQ0t2b2VxOHlrMmVBb3IwS0NDdU02eUNnRzFkK1hTV2EyYndOK0tUR2JwYTVMMzJ4Clo4WDFPbm5IcGsyTlZFSllUam5WVnpiYmhPUkhtSk1OTDhyOEY0WVhxc0J3bnd1aUdnOXpNUEhBTURIV09NS00KT2hGSXNWeHBsczd0Y3IwVGJ3VjJCOXI4WWJLTUZsVGdnc2VnUmZLRVlJT0xCTDhScUpSbDh6NGlOSThzSjU5OQpHdjFCYjJNZlhGWkVGSUd6bE8vYkJvYklCbzN1SHd6NnY2MFAyS0prSXZ3ZkxFbW1tWjFCR2UvT1orcUV1bTZRClJBYWh4TFdiTnMwdEs4L0txQjMxbk4yMDhiQmZHZnhOUTdxOGN3a3lVNXBnOFJzLzBYRTF2dWZQd0J0Z0FOU0UKRWFBK3c5aXhlbUxRYVg3SkxhOHVPRTlhWklDS2NYTCtjM2tTWWd3Yno3VUMzZmRnSWFuSXJpZmJTb2c0cXlnYQpPM0ZGdTNoTkJ1bVlBYTkxb0U1MmMwdDB5MGk3My85MXV0eTl3bTNrSUhlQmNXaTJkY0twbUVqNGliNy9MZmFwCnlLTjBic214WlZjeHBOU0JYTjlDbGEyWUU1aFlXdTBlV1Npd015VHFSaCtpTHNhVzh6Qm9JQVN6ejNFQ0F3RUEKQVFLQ0FnQTVYWjZBM2k2cmMybzcwNnlhY1hKRFNrNU96WEtDa0JacnpHVUxKYnU5ejJBbm83N0pNcWNQRzhMMQp0R3NVSkQ1a1ppWVIvZFJ1eG12KzZtdU5ZaWpGM0l0QlRmVmtxQ1ZraFZZS2Z5K0d1T0hUenRlaFVHa0VwQXR3CktveWZxKzhodFh4R25mdXUyMEtkNGRYUXNhS0ZPV0JzbGdmcDcrQnRrVmViUm5hajdtUUJ6M1dHK2tjYnJiZXgKSHZUOWZ3cSs5V1ZhSDJlS01OUHdoZVRJRExzMlprMmtDcEU0Q1lNbmZZczE1VlZJd0xtcDRUT3NZUm1RcFBQTQo4V3FaRmxDUDFrMDVpSjIyZXZQY2tBR3pDS1JldEdNN1p0ZGlJbCtJaGc5N3lhUjVQVzRhbFVZRjZsajkrNHpwCmVEdStldW9xb0RWYUM0V0dNVk5OS1BUNmFINVhicHJhdkxnRE5aSTMzL0VJejBKOTJrNFU5N1Rpd0xtdTB3YU8KZU93aGNyZENzMTRLLzJHbGFYeDgyUWJKcWVESWRFa3BkTTVqeVE0bFB2MlgzQXJjYjlIVGg1RmowSUJ6cm1pMQpMM29iM1RxNWZsYkVkdlF5SVRsM0ZsdGZOZTBhMDQzVHpPZTFsbEpHbGtjZ05XUWxCMHlEcGZRYThnRGN3c0EzCmNmdXF3NFU2ZDF5TlgrS1FXbTcza1pJbzZLRlBoaFhNcHpiNGgrSjQ4bzNJaUh5Vm5laThwWTdkdExwS2xRb3kKeXpxN2htdzVoaDNlbjNWdEpMdldyWDdIUjFuOW5KUTBsTnYyTWF6bkxuNDVoaVRWT1VHRGFQQkhNdFBvUEd5dQpWL0JKUHdJblFad1RlQzBId0VXK1MzemJadk5RSXM2TFI4ZFN2WEhKTzd6RVhsQzVRUUtDQVFFQXgxK1JFbWtaCnZ0KzRoUUd3YjZxR3dWR3V5TWk4OU03K2t0a1lyNE9CZGtPc09sZHE0RTVISThiY3JEVGx0VzJHZXJwNGRHRFYKSmdURFJtV0NmbVJ2TkVVNkwyS0lMbTlodk94MHozVlBoWDMrTmMxR2RCZ05IS0ljSmZZRFZJTWIrUUc3WTdYMApObHdvOGlSUFNUT3lPUzQwbE93ak5FYUN5TnVSTkY2TzFqNEJFZGJhMTZjNUJPRUhvYnZNMGhWSUJOSTlZWHFXCnhSUFJZd2lSS01VVmlyWE50SlJpWVE5OGdVczhkK2NjWFJKOE4xSVhoVXczTWplNVJ4RE9wNFE1VGJHbTI2ZlEKS3l3eFlPNkZEWDlRYmVpWElydG9rcDEwUlpmUFJScjFIU0w0cEZ6ZjJpRDU0bk16V2dCWWZMVStITHZJZ1IzVAowa0VrRWJEMDZCK3phUUtDQVFFQXp6WGt6QjdQR3YzTm5zc0hUT01vRmptQ1I3a3FET3p5SkJHaWVpcEU0b2V2CkF5YWtGYmRxN0Iyc2NkcGhwWUExZG8yL1FVYVVybHo5b2YvS0dxeHArV3NJb2RoN0FKbElBYzlTUHlFM0FnVjQKMU5Ocmx5elI0WWZUV0xiOURCcC9lNXRLRm9WVjhlUG1wRFpvTi9ZMTZQSk9nRnpXQ1hoNGxJaVBkVExlNER2UQpzR0piUnF0eE9qTVQ1ekpMZGZIRlV3K1E0dnNabzd1VjJ3TEIvMVBEZnNiSGN1OVFJT3p0VVA2Ykgyek5jU2h1CkIwMmZrZG8rMit6dTlmVS9wMGhuVHNwank3dHhtUnRHQVBOQ1pCM0FVaXNDY2RReTlPZmVCT0wwS0tGVHBxdzQKYnE3QmRjc2VubnZ1M3d2Y25Bbi80RmMybU1Oc2ZxUmtRdjBaS3B3aXlRS0NBUUF6dGQvRXJLbld6ZVBuNjRZOQprRGNmVVBaS2NYWkE4S2NxbzFBNXhad0FkcERuR09GSmlFUC9UWWJTeTIyQTN3VndNNGttZGk4U2kwMnlwb1Z3CkR0Q2crQXVkV3FzRGtEUURjampoemdWd0ZEdW83TE1IVFcycExZcXJkZUZyUEE0M1NYRzI3T3lJWk9MaDJ2VU4KZ1hFS1Q2ZW5zSTk0OFlqZVc4U1BscTdwZG0rRWx2dHZ6NW1FWUhGQVM1dFdLZHJpRlQyQ1dPOWQ4a1B1c2J3awpuT2wzYnF3SjJDcWtEZ1kyNnJLbVRyVVdsc0xNL21mSFZQdEQ5UndEQ0tMdzQrU1ErRERVNi9PY0h2dzNyZVdvCm1JcmQxdVBNU0Z0Wkc2bWFtME5SSXlyTUFkUUhuV2NhQmsrSm9tT0JSbkdzOXIxRGFwa1lsQW5xa0thd1IvdGQKY1V0eEFvSUJBUUNOSytDbm1NM3RTOEdOVURHM0ZvUTNNQk1zbm1DaDBjVGZBZ3k2UXBZUDUvVTZwbGJnWE1oQgorYTJGSEEydTNmeU91dC8wcnd1WkI4M2RVeEgwdmthdElWa09PeGtDUFd3cm4zNGZlSmVyanVMVnpQemVVRERtCkFNM2pBVGpCeUVQV2lPUWZGOVNJS29iMmxnTEhMYjFvNmJ6R0Ezbm5sZVpBL0JFUS9nbU9wL0gwV2U1cDVXQU4KRU1PY25rMS9HNnNlZmRwdWFqajdyay9ZbUxabktFQm0zVE1CZ1Q0TVVKOFdzWUFxRnN5WkxieFl5Vy9QeE90Uwpsc2Z2VnBsNWRRQzlVM0pPV1hSNXBYVTZMSUd0Q0FBQmV6LzlJVjllTDZLNW5ZNVBLQ3Avd1pIcEJyTFRlQUZ5ClpHbElHU0xDUktYSnlHRndEcVNhVzVIYmVlaHRlVmJSQW9JQkFRQ2JiaCtIUU00a0l2T0RVWGRlZlB0WWtMbEsKMFhibkZNcWJMVTdlcXB4akU1NlBEbXkzaE4vdkpnVkwwWXM4Y1JxbEJhSm1lZzB6dFFhcnJKYlFTSWx5S2RoTQp6MDhrTTFhNHlqdm5xWDJrTm5td05Xbzc4amdLcmthZ3dQZXM4QjFxemZFeVBISmJpY1NmTWI2bytXN2JGNFZtClltQVlFRytlLzlMVExzMHMrcVVJRmxjM0UwbmkxaDArQlhtSDhXWjZDbWZ2VW9aaTc5azFMV0hCVk9aYjJ4bjEKbnlGTlhjV2hqWEVhRmlCRnY3VWRuc09BTk4wVXdVK05FelZtU2VtTjVUc3Q2b29nUm90SUg5NFlGalcxdG0zQQp4RS9YVHFxYzZJZXZ6UlB4bmVDQjBneFBZQVJLK2VpbzhWZUFCemJyQjN4SEdaZnh2RDRHaXRzd3M4ZWgKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
kind: Secret
metadata:
  creationTimestamp: null
  name: tls-certs
  namespace: chin
---
apiVersion: v1
data:
  proxy.conf: |
    upstream local {
        server localhost;
    }

    server {
        listen 443;
        ssl    on;

        ssl_certificate     /etc/tls/cert.pem;
        ssl_certificate_key /etc/tls/key.pem;

        location / {
            proxy_pass http://local;
        }
    }
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: nginx-proxy-conf
  namespace: chin
---
apiVersion: v1
kind: Pod
metadata:
  name: "secure-monolith"
  labels:
    app: monolith
    secure: enabled
  namespace: chin
spec:
  containers:
    - name: nginx
      image: "nginx:1.9.14"
      lifecycle:
        preStop:
          exec:
            command: ["/usr/sbin/nginx","-s","quit"]
      volumeMounts:
        - name: "nginx-proxy-conf"
          mountPath: "/etc/nginx/conf.d"
        - name: "tls-certs"
          mountPath: "/etc/tls"
    - name: monolith
      image: "askcarter/monolith:1.0.0"
      ports:
        - name: http
          containerPort: 80
        - name: health
          containerPort: 81
      resources:
        limits:
          cpu: 0.2
          memory: "10Mi"
      livenessProbe:
        httpGet:
          path: /healthz
          port: 81
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 15
        timeoutSeconds: 5
      readinessProbe:
        httpGet:
          path: /readiness
          port: 81
          scheme: HTTP
        initialDelaySeconds: 5
        timeoutSeconds: 1
  volumes:
    - name: "tls-certs"
      secret:
        secretName: "tls-certs"
    - name: "nginx-proxy-conf"
      configMap:
        name: "nginx-proxy-conf"
        items:
          - key: "proxy.conf"
            path: "proxy.conf"
---
kind: Service
apiVersion: v1
metadata:
  name: "monolith"
  namespace: chin
spec:
  selector:
    app: "monolith"
    secure: "enabled"
  ports:
    - protocol: "TCP"
      port: 443
      targetPort: 443
  type: NodePort
